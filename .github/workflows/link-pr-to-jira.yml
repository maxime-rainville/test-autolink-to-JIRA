name: Add JIRA Link to PR
on:
  pull_request:
    types: [opened, edited]

jobs:
  add-jira-link:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      JIRA_BASE_URL: https://archipro.atlassian.net

    steps:
      - name: Extract issue number
        id: issue-number
        run: |
          issue_number=$(echo "$branch_name" | grep -oE '[A-Za-z]+-[0-9]+' | head -n 1)
          echo "issue_number=$issue_number" >> $GITHUB_ENV
      - name: Update PR Description
        uses: actions/github-script@v7
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_API_USER: ${{ vars.JIRA_API_USER }}
        with:
          script: |
            // Get current PR description first
            const currentBody = context.payload.pull_request.body || '';
            
            // Check if Related section already exists
            if (currentBody.includes('## Related')) {
              console.log("Related section already exists in PR description");
              return;
            }

            // Extract JIRA issue ID from branch name
            const branchName = context.payload.pull_request.head.ref;
            const jiraMatch = branchName.match(/[A-Z]+-\d+/);

            if (!jiraMatch) {
              console.log("No JIRA issue ID found in branch name");
              return;
            }
            
            const jiraId = jiraMatch[0];
            const jiraLink = `${process.env.JIRA_BASE_URL}/browse/${jiraId}`;
            
            // Fetch JIRA issue details
            const auth = Buffer.from(`${process.env.JIRA_API_USER}:${process.env.JIRA_API_TOKEN}`).toString('base64');
            const jiraResponse = await fetch(
              `${process.env.JIRA_BASE_URL}/rest/api/2/issue/${jiraId}`,
              {
                headers: {
                  'Authorization': `Basic ${auth}`,
                  'Accept': 'application/json'
                }
              }
            );
            
            if (!jiraResponse.ok) {
              console.log('Failed to fetch JIRA issue details');
              return;
            }
            
            const jiraIssue = await jiraResponse.json();
            const issueTitle = jiraIssue.fields.summary;
            
            // Add Related section with JIRA link including title
            const newBody = currentBody + `\n\n## Related\n- [${jiraId}: ${issueTitle}](${jiraLink})`;
            // Update PR description
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: newBody
            });
